{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n// import Newsitem from './Newsitem';\n// import Spinner from './Spinner';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// // import PropTypes from 'prop-types'\n\n// const News = (props)=>  {\n\n//     const CapitalizeFirstLetter = (string)=> {\n//         return string[0].toUpperCase() + string.slice(1);\n//       }\n//       document.title = `${CapitalizeFirstLetter(props.category)} - NewsMonkey`;\n\n//         const [articles, setArticles] = useState([])\n//         const [Loading, setLoading] = useState(true)\n//         const [page, setPage] = useState(1)\n//         const [totalResults, setTotalResults] = useState(0)\n\n//     //https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=636a0b4b78574390aa3f98b7e296c345\n//     useEffect(()=>{\n//         setArticles([]); // Clear previous articles before fetching new ones\n//     setPage(1);\n\n//         fetchNews();\n//             },[props.category])\n\n//    const  fetchNews= async()=>{\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\n//     let data = await fetch(url);\n//     setLoading(true);\n//     let parsedData = await data.json();\n//     console.log(parsedData);\n//     setArticles(parsedData.articles);\n//     setPage(page+1);\n//     setTotalResults(parsedData.totalResults || 0);\n//     setLoading(false);\n\n//    }\n//    const fetchMoreData = async()=>{\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\n//     setLoading(true);\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     console.log(parsedData);\n//      setArticles((prevArticles) => {\n//         const allArticles =[...prevArticles, ...parsedData.articles];\n//         const uniqueArticles = allArticles.filter((article, index, self) =>\n//             index === self.findIndex((a) => a.url === article.url)\n//         );\n//         return uniqueArticles;\n//      });\n//      setPage(page+1);\n//      setLoading(false);\n\n//    }\n\n//         return (\n//             <div className='container my-3'>\n//                 <h2 className='text-center'><b>Aaj Tak-Top Headlines-News {CapitalizeFirstLetter(props.category)}</b></h2>\n//                {/* { Loading && <Spinner/>} */}\n//                <InfiniteScroll\n//                     next={fetchMoreData}\n//                     hasMore={true}\n//                     dataLength={articles.length}\n//                     loader={<Spinner/> }> \n//                       <div className=\"container\">\n//                               <div className=\"row\">\n//                               { articles?.map((element) => { \n\n//                                       return (\n//                                           <div className='col-md-4 my-5' key={element.url}>\n//                                               <Newsitem \n//                                                   title={element.title} \n//                                                   Description={element.description} \n//                                                   imageUrl={element.urlToImage}\n//                                                   newsUrl={element.url} \n//                                               />\n//                                           </div>\n//                                       );\n//                                   })}\n//                               </div>\n//                 </div>\n//                 </InfiniteScroll>\n//                 {/* <div className=\"container-3 d-flex justify-content-between\">\n//                     <button type=\"button\"  disabled={page <= 1} className=\"btn btn-dark\">&larr; previous</button>\n//                     <button type=\"button\"  className=\"btn btn-dark\">Next &rarr;</button>\n//                 </div> */}\n//             </div>\n//         );\n//     }\n\n// export default News;","map":{"version":3,"names":[],"sources":["C:/REACT/project-2-app/src/components/News.js"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import Newsitem from './Newsitem';\r\n// import Spinner from './Spinner';\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n// // import PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n// const News = (props)=>  {\r\n   \r\n//     const CapitalizeFirstLetter = (string)=> {\r\n//         return string[0].toUpperCase() + string.slice(1);\r\n//       }\r\n//       document.title = `${CapitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n      \r\n//         const [articles, setArticles] = useState([])\r\n//         const [Loading, setLoading] = useState(true)\r\n//         const [page, setPage] = useState(1)\r\n//         const [totalResults, setTotalResults] = useState(0)\r\n\r\n    \r\n//     //https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=636a0b4b78574390aa3f98b7e296c345\r\n//     useEffect(()=>{\r\n//         setArticles([]); // Clear previous articles before fetching new ones\r\n//     setPage(1);\r\n\r\n//         fetchNews();\r\n//             },[props.category])\r\n\r\n//    const  fetchNews= async()=>{\r\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\r\n//     let data = await fetch(url);\r\n//     setLoading(true);\r\n//     let parsedData = await data.json();\r\n//     console.log(parsedData);\r\n//     setArticles(parsedData.articles);\r\n//     setPage(page+1);\r\n//     setTotalResults(parsedData.totalResults || 0);\r\n//     setLoading(false);\r\n\r\n    \r\n//    }\r\n//    const fetchMoreData = async()=>{\r\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\r\n//     setLoading(true);\r\n//     let data = await fetch(url);\r\n//     let parsedData = await data.json();\r\n//     console.log(parsedData);\r\n//      setArticles((prevArticles) => {\r\n//         const allArticles =[...prevArticles, ...parsedData.articles];\r\n//         const uniqueArticles = allArticles.filter((article, index, self) =>\r\n//             index === self.findIndex((a) => a.url === article.url)\r\n//         );\r\n//         return uniqueArticles;\r\n//      });\r\n//      setPage(page+1);\r\n//      setLoading(false);\r\n\r\n//    }\r\n    \r\n\r\n    \r\n//         return (\r\n//             <div className='container my-3'>\r\n//                 <h2 className='text-center'><b>Aaj Tak-Top Headlines-News {CapitalizeFirstLetter(props.category)}</b></h2>\r\n//                {/* { Loading && <Spinner/>} */}\r\n//                <InfiniteScroll\r\n//                     next={fetchMoreData}\r\n//                     hasMore={true}\r\n//                     dataLength={articles.length}\r\n//                     loader={<Spinner/> }> \r\n//                       <div className=\"container\">\r\n//                               <div className=\"row\">\r\n//                               { articles?.map((element) => { \r\n              \r\n//                                       return (\r\n//                                           <div className='col-md-4 my-5' key={element.url}>\r\n//                                               <Newsitem \r\n//                                                   title={element.title} \r\n//                                                   Description={element.description} \r\n//                                                   imageUrl={element.urlToImage}\r\n//                                                   newsUrl={element.url} \r\n//                                               />\r\n//                                           </div>\r\n//                                       );\r\n//                                   })}\r\n//                               </div>\r\n//                 </div>\r\n//                 </InfiniteScroll>\r\n//                 {/* <div className=\"container-3 d-flex justify-content-between\">\r\n//                     <button type=\"button\"  disabled={page <= 1} className=\"btn btn-dark\">&larr; previous</button>\r\n//                     <button type=\"button\"  className=\"btn btn-dark\">Next &rarr;</button>\r\n//                 </div> */}\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n\r\n// export default News;\r\n\r\n\r\n\r\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}