{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\project-2-app\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import Newsitem from './Newsitem';\n// import Spinner from './Spinner';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// // import PropTypes from 'prop-types'\n\n// const News = (props)=>  {\n\n//     const CapitalizeFirstLetter = (string)=> {\n//         return string[0].toUpperCase() + string.slice(1);\n//       }\n//       document.title = `${CapitalizeFirstLetter(props.category)} - NewsMonkey`;\n\n//         const [articles, setArticles] = useState([])\n//         const [Loading, setLoading] = useState(true)\n//         const [page, setPage] = useState(1)\n//         const [totalResults, setTotalResults] = useState(0)\n\n//     //https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=636a0b4b78574390aa3f98b7e296c345\n//     useEffect(()=>{\n//         setArticles([]); // Clear previous articles before fetching new ones\n//     setPage(1);\n\n//         fetchNews();\n//             },[props.category])\n\n//    const  fetchNews= async()=>{\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\n//     let data = await fetch(url);\n//     setLoading(true);\n//     let parsedData = await data.json();\n//     console.log(parsedData);\n//     setArticles(parsedData.articles);\n//     setPage(page+1);\n//     setTotalResults(parsedData.totalResults || 0);\n//     setLoading(false);\n\n//    }\n//    const fetchMoreData = async()=>{\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\n//     setLoading(true);\n//     let data = await fetch(url);\n//     let parsedData = await data.json();\n//     console.log(parsedData);\n//      setArticles((prevArticles) => {\n//         const allArticles =[...prevArticles, ...parsedData.articles];\n//         const uniqueArticles = allArticles.filter((article, index, self) =>\n//             index === self.findIndex((a) => a.url === article.url)\n//         );\n//         return uniqueArticles;\n//      });\n//      setPage(page+1);\n//      setLoading(false);\n\n//    }\n\n//         return (\n//             <div className='container my-3'>\n//                 <h2 className='text-center'><b>Aaj Tak-Top Headlines-News {CapitalizeFirstLetter(props.category)}</b></h2>\n//                {/* { Loading && <Spinner/>} */}\n//                <InfiniteScroll\n//                     next={fetchMoreData}\n//                     hasMore={true}\n//                     dataLength={articles.length}\n//                     loader={<Spinner/> }> \n//                       <div className=\"container\">\n//                               <div className=\"row\">\n//                               { articles?.map((element) => { \n\n//                                       return (\n//                                           <div className='col-md-4 my-5' key={element.url}>\n//                                               <Newsitem \n//                                                   title={element.title} \n//                                                   Description={element.description} \n//                                                   imageUrl={element.urlToImage}\n//                                                   newsUrl={element.url} \n//                                               />\n//                                           </div>\n//                                       );\n//                                   })}\n//                               </div>\n//                 </div>\n//                 </InfiniteScroll>\n//                 {/* <div className=\"container-3 d-flex justify-content-between\">\n//                     <button type=\"button\"  disabled={page <= 1} className=\"btn btn-dark\">&larr; previous</button>\n//                     <button type=\"button\"  className=\"btn btn-dark\">Next &rarr;</button>\n//                 </div> */}\n//             </div>\n//         );\n//     }\n\n// export default News;\n\nimport React, { useEffect, useState } from 'react';\nimport Newsitem from './Newsitem';\nimport Spinner from './Spinner';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const CapitalizeFirstLetter = string => {\n    return string[0].toUpperCase() + string.slice(1);\n  };\n  document.title = `${CapitalizeFirstLetter(props.category)} - NewsMonkey`;\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const [hasMore, setHasMore] = useState(true); // ✅ Track if more data is available\n\n  useEffect(() => {\n    setArticles([]); // ✅ Clear previous articles\n    setPage(1);\n    fetchNews(1); // ✅ Fetch first page\n  }, [props.category]);\n  const fetchNews = async pageNum => {\n    setLoading(true);\n    let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}&page=${pageNum}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults || 0);\n    setLoading(false);\n  };\n  const fetchMoreData = async () => {\n    if (articles.length >= totalResults) {\n      setHasMore(false); // ✅ Stop fetching if all articles loaded\n      return;\n    }\n    let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}&page=${page + 1}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(prevArticles => {\n      const allArticles = [...prevArticles, ...parsedData.articles];\n      return allArticles.filter((article, index, self) => index === self.findIndex(a => a.url === article.url));\n    });\n    setPage(page + 1);\n    setHasMore(articles.length + parsedData.articles.length < totalResults); // ✅ Update hasMore\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"Aaj Tak - Top Headlines - \", CapitalizeFirstLetter(props.category)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      next: fetchMoreData,\n      hasMore: hasMore // ✅ Dynamically update hasMore\n      ,\n      dataLength: articles.length,\n      loader: loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 36\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 my-5\",\n            children: /*#__PURE__*/_jsxDEV(Newsitem, {\n              title: element.title,\n              Description: element.description,\n              imageUrl: element.urlToImage,\n              newsUrl: element.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)\n          }, element.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(News, \"WwOLV5Gbka7MX6N9/QMixq6K5Vg=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","Newsitem","Spinner","InfiniteScroll","jsxDEV","_jsxDEV","News","props","_s","CapitalizeFirstLetter","string","toUpperCase","slice","document","title","category","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","hasMore","setHasMore","fetchNews","pageNum","url","process","env","REACT_APP_NEWS_API_KEY","pageSize","data","fetch","parsedData","json","fetchMoreData","length","prevArticles","allArticles","filter","article","index","self","findIndex","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","next","dataLength","loader","map","element","Description","description","imageUrl","urlToImage","newsUrl","_c","$RefreshReg$"],"sources":["C:/REACT/project-2-app/src/components/News.js"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import Newsitem from './Newsitem';\r\n// import Spinner from './Spinner';\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n// // import PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n// const News = (props)=>  {\r\n   \r\n//     const CapitalizeFirstLetter = (string)=> {\r\n//         return string[0].toUpperCase() + string.slice(1);\r\n//       }\r\n//       document.title = `${CapitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n      \r\n//         const [articles, setArticles] = useState([])\r\n//         const [Loading, setLoading] = useState(true)\r\n//         const [page, setPage] = useState(1)\r\n//         const [totalResults, setTotalResults] = useState(0)\r\n\r\n    \r\n//     //https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=636a0b4b78574390aa3f98b7e296c345\r\n//     useEffect(()=>{\r\n//         setArticles([]); // Clear previous articles before fetching new ones\r\n//     setPage(1);\r\n\r\n//         fetchNews();\r\n//             },[props.category])\r\n\r\n//    const  fetchNews= async()=>{\r\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\r\n//     let data = await fetch(url);\r\n//     setLoading(true);\r\n//     let parsedData = await data.json();\r\n//     console.log(parsedData);\r\n//     setArticles(parsedData.articles);\r\n//     setPage(page+1);\r\n//     setTotalResults(parsedData.totalResults || 0);\r\n//     setLoading(false);\r\n\r\n    \r\n//    }\r\n//    const fetchMoreData = async()=>{\r\n//     let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}`;\r\n//     setLoading(true);\r\n//     let data = await fetch(url);\r\n//     let parsedData = await data.json();\r\n//     console.log(parsedData);\r\n//      setArticles((prevArticles) => {\r\n//         const allArticles =[...prevArticles, ...parsedData.articles];\r\n//         const uniqueArticles = allArticles.filter((article, index, self) =>\r\n//             index === self.findIndex((a) => a.url === article.url)\r\n//         );\r\n//         return uniqueArticles;\r\n//      });\r\n//      setPage(page+1);\r\n//      setLoading(false);\r\n\r\n//    }\r\n    \r\n\r\n    \r\n//         return (\r\n//             <div className='container my-3'>\r\n//                 <h2 className='text-center'><b>Aaj Tak-Top Headlines-News {CapitalizeFirstLetter(props.category)}</b></h2>\r\n//                {/* { Loading && <Spinner/>} */}\r\n//                <InfiniteScroll\r\n//                     next={fetchMoreData}\r\n//                     hasMore={true}\r\n//                     dataLength={articles.length}\r\n//                     loader={<Spinner/> }> \r\n//                       <div className=\"container\">\r\n//                               <div className=\"row\">\r\n//                               { articles?.map((element) => { \r\n              \r\n//                                       return (\r\n//                                           <div className='col-md-4 my-5' key={element.url}>\r\n//                                               <Newsitem \r\n//                                                   title={element.title} \r\n//                                                   Description={element.description} \r\n//                                                   imageUrl={element.urlToImage}\r\n//                                                   newsUrl={element.url} \r\n//                                               />\r\n//                                           </div>\r\n//                                       );\r\n//                                   })}\r\n//                               </div>\r\n//                 </div>\r\n//                 </InfiniteScroll>\r\n//                 {/* <div className=\"container-3 d-flex justify-content-between\">\r\n//                     <button type=\"button\"  disabled={page <= 1} className=\"btn btn-dark\">&larr; previous</button>\r\n//                     <button type=\"button\"  className=\"btn btn-dark\">Next &rarr;</button>\r\n//                 </div> */}\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n\r\n// export default News;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Newsitem from './Newsitem';\r\nimport Spinner from './Spinner';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst News = (props) => {\r\n    const CapitalizeFirstLetter = (string) => {\r\n        return string[0].toUpperCase() + string.slice(1);\r\n    };\r\n\r\n    document.title = `${CapitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n\r\n    const [articles, setArticles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [hasMore, setHasMore] = useState(true);  // ✅ Track if more data is available\r\n\r\n    useEffect(() => {\r\n        setArticles([]); // ✅ Clear previous articles\r\n        setPage(1);\r\n        fetchNews(1); // ✅ Fetch first page\r\n    }, [props.category]);\r\n\r\n    const fetchNews = async (pageNum) => {\r\n        setLoading(true);\r\n        let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}&page=${pageNum}`;\r\n        \r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n\r\n        setArticles(parsedData.articles);\r\n        setTotalResults(parsedData.totalResults || 0);\r\n        setLoading(false);\r\n    };\r\n\r\n    const fetchMoreData = async () => {\r\n        if (articles.length >= totalResults) {\r\n            setHasMore(false); // ✅ Stop fetching if all articles loaded\r\n            return;\r\n        }\r\n\r\n        let url = `https://newsapi.org/v2/top-headlines?country=us&category=${props.category}&apiKey=${process.env.REACT_APP_NEWS_API_KEY}&pageSize=${props.pageSize}&page=${page + 1}`;\r\n        let data = await fetch(url);\r\n        let parsedData = await data.json();\r\n\r\n        setArticles((prevArticles) => {\r\n            const allArticles = [...prevArticles, ...parsedData.articles];\r\n            return allArticles.filter((article, index, self) =>\r\n                index === self.findIndex((a) => a.url === article.url)\r\n            );\r\n        });\r\n\r\n        setPage(page + 1);\r\n        setHasMore(articles.length + parsedData.articles.length < totalResults);  // ✅ Update hasMore\r\n    };\r\n\r\n    return (\r\n        <div className='container my-3'>\r\n            <h2 className='text-center'><b>Aaj Tak - Top Headlines - {CapitalizeFirstLetter(props.category)}</b></h2>\r\n            \r\n            <InfiniteScroll\r\n                next={fetchMoreData}\r\n                hasMore={hasMore}  // ✅ Dynamically update hasMore\r\n                dataLength={articles.length}\r\n                loader={loading && <Spinner />}\r\n            > \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {articles.map((element) => (\r\n                            <div className='col-md-4 my-5' key={element.url}>\r\n                                <Newsitem \r\n                                    title={element.title} \r\n                                    Description={element.description} \r\n                                    imageUrl={element.urlToImage}\r\n                                    newsUrl={element.url} \r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </InfiniteScroll>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}